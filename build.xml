<?xml version="1.0" encoding="UTF-8"?>
<project name="sarissa" default="dist" basedir=".">
	<description>
	Ant build file for Sarissa project (because building a javascript project with Ant is cool)
	More info at http://sarissa.sf.net 
	</description>
	<property file="manos.properties" />
	<property name="dist.dir" location="dist" />
	<property name="doc.dir" location="doc" />
	<property name="src.dir" location="${basedir}" />
	<property name="jsdoc.dist.dir" location="build_tools/jsdoc" />
	<property name="jsdoc.out.dir" location="jsdoc_out" />

	
    
    <target name="clean" description="Deletes all generated files and directories">
        <delete dir="${dist.dir}" />
        <delete dir="${jsdoc.out.dir}" />
    </target>

	<target name="init" depends="clean">
		<tstamp />
		<mkdir dir="${dist.dir}/temp" />
		<mkdir dir="${dist.dir}/temp/doc" />
        <copy todir="${dist.dir}/temp">
            <fileset dir="${basedir}" includes="build_tools/ecmaunit/*.*" excludes="**/cvs/**" />
            <fileset dir="${src.dir}" includes="sarissa*.js" excludes="**/cvs/**" />
            <fileset dir="${src.dir}" includes="testsarissa.*" excludes="**/cvs/**" />
            <fileset dir="${src.dir}" includes="test.xml" excludes="**/cvs/**" />   
            <fileset dir="${src.dir}" includes="CHANGELOG.txt" excludes="**/cvs/**" />
        </copy>   
        <copy todir="${dist.dir}/temp/doc">
            <fileset dir="${doc.dir}" includes="samples/*" excludes="**/cvs/**" />
            <fileset dir="${doc.dir}" includes="*.txt" excludes="**/cvs/**" />   
        </copy>        
        <replace dir="${dist.dir}/temp" token="@sarissa.version@" value="${sarissa.version}" /> 
	<fixcrlf srcdir="${dist.dir}/temp" tab="remove" tablength="4" javafiles="no" includes="**/*.js" />     
	</target>
	<target name="jsdoc" depends="init" description="Generates the JSdoc documentation in jsdoc.out.dir">
		<mkdir dir="${jsdoc.out.dir}" />      
		<exec executable="perl" failonerror="true">
			<arg line="${jsdoc.dist.dir}/jsdoc.pl  --public
                --directory ${jsdoc.out.dir} 
	   			--project-name ${ant.project.name} 
	   			--project-summary doc/jsdoc-project-summary ${dist.dir}/temp/sarissa.js ${dist.dir}/temp/sarissa_dhtml.js ${dist.dir}/temp/sarissa_ieemu_xslt.js ${dist.dir}/temp/sarissa_ieemu_xpath.js" />
		</exec>
	</target>
	<target name="website.upload" depends="dist" description="Update SourceForge website using the JSDoc generated API documentation">
		<scp todir="${sourceforge.username}:${sourceforge.password}@${sourceforge.webserver}:${sourceforge.htdocs.dir}">
			<fileset dir="${dist.dir}/temp" includes="**/*.*" />
		</scp>
	</target>
	<target name="dist" depends="jsdoc" description="Assembles a destribution archive in dist.dir">  
		<copy todir="${dist.dir}/temp/doc">
			<fileset dir="${jsdoc.out.dir}" includes="**/*.*" excludes="**/cvs/**" />
		</copy>
		<zip zipfile="${dist.dir}/${ant.project.name}${sarissa.version}.zip">
			<zipfileset dir="${dist.dir}/temp" prefix="${ant.project.name}" includes="**/*.*" />
		</zip>
	</target>
	<target name="dist.upload" description="Upload a distribution zip to SourceForge">
		<available file="${dist.dir}/${ant.project.name}${sarissa.version}.zip" property="release.available" />
		<fail unless="release.available" message="No distribution file with name: '${ant.project.name}${sarissa.version}.zip' available, build with 'ant dist' to upload" />
		<fail unless="sourceforge.password" message="Please specify sourceforge.password (typicaly your email address) with '-Dsourceforge.password=&lt;value&gt;' " />
		<echo>Uploading '${ant.project.name}${sarissa.version}.zip' to '${sourceforge.server}'</echo>
		<ftp server="${sourceforge.server}" remotedir="${sourceforge.dir}" userid="${sourceforge.userid}" password="${sourceforge.password}" verbose="yes" binary="yes" passive="yes">
			<fileset dir="${dist.dir}" includes="${ant.project.name}${sarissa.version}.zip" />
		</ftp>
	</target>
</project>